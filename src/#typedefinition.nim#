import macros
import fmi2TypesPlatform, fmi2type, fmi2callbackfunctions, modelstate, fmi2eventinfo


macro genModelInstance*( NUMBER_OF_REALS, NUMBER_OF_INTEGERS, 
               NUMBER_OF_BOOLEANS, NUMBER_OF_STRINGS, 
               NUMBER_OF_STATES, NUMBER_OF_EVENT_INDICATORS: static[int]): untyped =
  let modelInstance = nnkPostfix.newTree(
                        newIdentNode("*"),
                        newIdentNode("ModelInstance") 
                      )

  let mytype = nnkPostfix.newTree(
                 newIdentNode("*"),
                 nnkAccQuoted.newTree( newIdentNode("type") )
               )

  result = quote do:
      type
        `modelInstance` = ref object
            r*:          array[`NUMBER_OF_REALS`, fmi2Real]
            i*:          array[`NUMBER_OF_INTEGERS`, fmi2Integer] 
            b*:          array[`NUMBER_OF_BOOLEANS`, fmi2Boolean]
            s*:          array[`NUMBER_OF_STRINGS`, fmi2String] 
            isPositive*: array[`NUMBER_OF_EVENT_INDICATORS`, fmi2Boolean] 
            time*: fmi2Real
            instanceName*: fmi2String
            `mytype`: fmi2Type
            GUID*: fmi2String
            functions*: ptr fmi2CallbackFunctions  # <-----
            loggingOn*: fmi2Boolean
            logCategories*: array[0..NUMBER_OF_CATEGORIES-1, fmi2Boolean]
            componentEnvironment*: fmi2ComponentEnvironment
            state*: ModelState
            eventInfo*: fmi2EventInfo
            isDirtyValues*: fmi2Boolean
            isNewEventIteration*: fmi2Boolean

#  echo result
